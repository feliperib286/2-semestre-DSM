CREATE TABLE cursos (id_curso SERIAL PRIMARY KEY, nome VARCHAR(100) NOT NULL);
CREATE TABLE alunos (id_aluno SERIAL PRIMARY KEY, nome VARCHAR(100) NOT NULL, idade INT, id_curso INT REFERENCES
cursos(id_curso));
CREATE TABLE notas (id_nota PRIMARY KEY, disciplina VARCHAR(100) NOT NULL, nota float, id_aluno INT REFERENCES
alunos(id_aluno));
INSERT INTO cursos (nome) VALUES ('Engenharia');
INSERT INTO cursos (nome) VALUES ('Análise de Sistemas'), ('Computação'), ('Matemática');
INSERT INTO alunos (nome, idade, id_curso) VALUES ('João Silva', 22, 1);
INSERT INTO alunos (nome, idade, id_curso) VALUES ('Marina Lima', 16, 3), ('Maria Souza', 20, 3), ('Carlos Lima', 25, 4), ('Lucas
Pereira', 18, 3);
INSERT INTO notas (id_nota, id_aluno, disciplina, nota) VALUES (101, 1, 'Matemática', 8.5),(102, 2, 'História', 9.0);
UPDATE alunos SET idade = 16 WHERE nome = 'João Silva';
UPDATE alunos SET idade = 17, id_curso = 1 WHERE nome = 'Marina Lima';



-- ========================================
-- SCRIPT COMPLETO PARA MANIPULAR PROCEDURES
-- E GERENCIAR CURSOS NO BANCO ESCOLAR
-- ========================================

-- 1. Criar uma Procedure chamada curso2
CREATE OR REPLACE PROCEDURE curso2(
    p_nome VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO cursos (nome) VALUES (p_nome);
END;
$$;

-- 2. Criar uma nova procedure com o nome novo_cadastro_curso (renomeando na prática)
CREATE OR REPLACE PROCEDURE novo_cadastro_curso(
    p_nome VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO cursos (nome) VALUES (p_nome);
END;
$$;

-- 3. Excluir a procedure antiga chamada curso2
DROP PROCEDURE curso2(VARCHAR);

-- 4. Excluir a procedure chamada novo_cadastro_curso
DROP PROCEDURE novo_cadastro_curso(VARCHAR);

-- 5. Criar uma nova Procedure chamada cadastrar_curso
--    que irá adicionar novos cursos ao banco
CREATE OR REPLACE PROCEDURE cadastrar_curso(
    p_nome VARCHAR
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO cursos (nome) VALUES (p_nome);
END;
$$;

-- 6. Chamar a procedure cadastrar_curso para inserir um novo curso
CALL cadastrar_curso('Ciência de Dados');

-- 7. Criar uma Procedure para cadastrar alunos (já fornecida)
CREATE OR REPLACE PROCEDURE cadastrar_aluno(
    p_nome VARCHAR,
    p_idade INT,
    id_curso INT
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO alunos (nome, idade, id_curso)
    VALUES (p_nome, p_idade, id_curso);
END;
$$;

-- 8. Chamar a procedure cadastrar_aluno para inserir um aluno
CALL cadastrar_aluno('Carlos Andrade', 20, 3);

-- 9. Verificar os dados das tabelas
SELECT * FROM cursos;
SELECT * FROM alunos;
